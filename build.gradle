apply plugin: 'java'
apply plugin: 'war'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
//        tests {
//            srcDir 'test'
//        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

dependencies {
    providedCompile files('libs/servlet-api.jar')
    //providedCompile "javax.servlet:javax.servlet-api:${servletVersion}"
    compile fileTree(dir: 'libs/spring', include: '*.jar')
    compile fileTree(dir: 'libs/jackson', include: '*.jar')
    compile fileTree(dir: 'libs/spring-security', include: '*.jar')
    compile files('libs/commons-logging-1.1.3.jar')
    compile files('libs/log4j-1.2.17.jar')
    compile files('libs/flux.jar') //rebuilded flux for multithreading analysis directly from java
    compile files('libs/Chesspresso-lib.jar')

    testCompile files('libs/junit-4.11.jar')
    testRuntime files('libs/junit-4.11.jar',
                      'libs/hamcrest-core-1.3.jar')
}
war {
    archiveName 'ROOT.war'
    //archiveName 'dev.war'
    from 'web' // adds a file-set to the root of the archive
    // classpath fileTree('resources')
    // classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
}
test {
    include '**'
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}